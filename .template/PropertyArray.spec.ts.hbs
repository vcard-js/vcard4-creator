import { describe, it } from 'vitest';
import { expect } from 'chai';
import {{{pascalCase property}}}Property from '../../../src/properties/{{{pascalCase property}}}Property.js';
import {{{pascalCase property}}}PropertyArray from '../../../src/properties/arrays/{{{pascalCase property}}}PropertyArray.js';

describe('{{{pascalCase property}}}PropertyArray', () => {
    it('is a class', () => {
        expect({{{pascalCase property}}}PropertyArray).to.be.a('class');
    });

    describe('#push()', () => {
        it('is a method', () => {
            expect({{{pascalCase property}}}PropertyArray.prototype.push).to.be.a('function');
        });

        it('returns a number', () => {
            const value = '...';
            const {{{camelCase property}}}Properties = new {{{pascalCase property}}}PropertyArray();

            expect({{{camelCase property}}}Properties.push(value)).to.be.a('number');
        });

        it('returns the length of the array', () => {
            const value = '...';
            const {{{camelCase property}}}Properties = new {{{pascalCase property}}}PropertyArray();

            expect({{{camelCase property}}}Properties.push(value)).to.equal(1);
        });

        it('creates an `{{{pascalCase property}}}Property` object in the array', () => {
            const value = '...';
            const {{{camelCase property}}}Properties = new {{{pascalCase property}}}PropertyArray();

            {{{camelCase property}}}Properties.push(value);

            expect({{{camelCase property}}}Properties.at(0) instanceof {{{pascalCase property}}}Property).to.equal(true);
        });

        it('creates an `{{{pascalCase property}}}Property` object in the array with the proper value', () => {
            const value = '...';
            const {{{camelCase property}}}Properties = new {{{pascalCase property}}}PropertyArray();

            {{{camelCase property}}}Properties.push(value);

            expect({{{camelCase property}}}Properties.at(0).valueOf()).to.equal(value);
        });
    });
});
